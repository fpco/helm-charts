grafana:
  adminPassword: <SOMESTRONGPASSWORD>
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'true'
    hosts:
      - monitoring.<MYDOMAIN>.com
    path: /
    # The secret will be automatically created by kube-lego
    tls:
      - secretName: monitoring-tls-cert
        hosts:
          - monitoring.<MYDOMAIN>.com
  service:
    type: ClusterIP

prometheus:
  userAlerts:
    create: true
    yaml: |
      groups:
      - name: my-rules
        rules:
        - alert: HttpErrorIncrease
          annotations:
            message: "There is an incresed number of NON 2xx responses."
          expr: |
            (sum(rate(nginx_ingress_controller_requests{ingres="fpco-monitoring-example-app-example-app", status!~"[4-5].*"}[2m]))
              /
            sum(rate(nginx_ingress_controller_requests{ingress="fpco-monitoring-example-app-example-app"}[2m])))
            * 100 > 1
          for: 2m
          labels:
            severity: warning
  service:
    prometheusExternalUrl: https://monitoring.<MYDOMAIN>.com/prometheus
    alertManagerExternalUrl: https://monitoring.<MYDOMAIN>.com/alertmanager
  ingress:
    enabled: true
    monitoringHost: monitoring.<MYDOMAIN>.com
    annotations:
      kubernetes.io/ingress.class: "nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: monitoring-basic-auth
      nginx.ingress.kubernetes.io/auth-realm: "FPCO Monitoring - Authentication Required"
      ingress.kubernetes.io/rewrite-target: "/"
    tls:
      - secretName: monitoring-tls-cert
        hosts:
          - monitoring.<MYDOMAIN>.com
